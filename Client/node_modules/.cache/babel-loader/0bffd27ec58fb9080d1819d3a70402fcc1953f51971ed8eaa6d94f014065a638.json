{"ast":null,"code":"var _jsxFileName = \"/home/yassine/Checkers_Project/my-app/src/board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Piece } from \"./piece\";\nimport { Cell } from \"./cell\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.bind(\"http://192.168.1.7:3000\", {\n  transports: [\"websocket\"]\n});\nexport function Board() {\n  _s();\n  const [cellIndex, SetCell] = useState([0, 0]);\n  const board_size = 8;\n  useEffect(() => {\n    socket.on(\"move black\", () => {});\n  });\n  const black_pieces = () => {\n    const pieces = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 5; j < 8; j++) {\n        const index = i + j * board_size;\n        if ((i + j) % 2 !== 0) {\n          pieces.push(Piece({\n            index: index,\n            Selectedindex: cellIndex,\n            type: 0,\n            source: \"/pieces/black piece.png\",\n            x: i,\n            y: j,\n            onSelect: SetCell\n          }));\n        }\n      }\n    }\n    return pieces;\n  };\n  const white_pieces = () => {\n    const pieces = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 3; j++) {\n        const index = i + j * board_size;\n        if ((i + j) % 2 !== 0) {\n          pieces.push(Piece({\n            index: index,\n            Selectedindex: cellIndex,\n            type: 1,\n            source: \"/pieces/white piece.png\",\n            x: i,\n            y: j,\n            onSelect: SetCell\n          }));\n        }\n      }\n    }\n    return pieces;\n  };\n  const cells = () => {\n    const cells = [];\n    for (let row = 0; row < board_size; row++) {\n      for (let col = 0; col < board_size; col++) {\n        const key = col + row * board_size;\n        cells.push(Cell({\n          key: key,\n          isSelected: cellIndex,\n          type: (row + col) % 2 === 0 ? 1 : 0\n        }));\n      }\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: [cells(), black_pieces(), white_pieces()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"BKfTfdbWrEwF4IXz4TrWRd8wm5I=\");\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","Piece","Cell","io","jsxDEV","_jsxDEV","socket","bind","transports","Board","_s","cellIndex","SetCell","board_size","on","black_pieces","pieces","i","j","index","push","Selectedindex","type","source","x","y","onSelect","white_pieces","cells","row","col","key","isSelected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yassine/Checkers_Project/my-app/src/board.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Piece } from \"./piece\";\nimport { Cell } from \"./cell\";\nimport io from \"socket.io-client\";\n\nconst socket = io.bind(\"http://192.168.1.7:3000\", {\n  transports: [\"websocket\"],\n});\n\nexport function Board() {\n  const [cellIndex, SetCell] = useState([0, 0]);\n  const board_size = 8;\n\n  useEffect(() => {\n    socket.on(\"move black\", () => { });\n  });\n  const black_pieces = () => {\n    const pieces = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 5; j < 8; j++) {\n        const index = i + j * board_size;\n        if ((i + j) % 2 !== 0) {\n          pieces.push(\n            Piece({\n              index: index,\n              Selectedindex: cellIndex,\n              type: 0,\n              source: \"/pieces/black piece.png\",\n              x: i,\n              y: j,\n              onSelect: SetCell,\n            }),\n          );\n        }\n      }\n    }\n    return pieces;\n  };\n\n  const white_pieces = () => {\n    const pieces = [];\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 3; j++) {\n        const index = i + j * board_size;\n        if ((i + j) % 2 !== 0) {\n          pieces.push(\n            Piece({\n              index: index,\n              Selectedindex: cellIndex,\n              type: 1,\n              source: \"/pieces/white piece.png\",\n              x: i,\n              y: j,\n              onSelect: SetCell,\n            }),\n          );\n        }\n      }\n    }\n    return pieces;\n  };\n\n  const cells = () => {\n    const cells = [];\n    for (let row = 0; row < board_size; row++) {\n      for (let col = 0; col < board_size; col++) {\n        const key = col + row * board_size;\n        cells.push(\n          Cell({\n            key: key,\n            isSelected: cellIndex,\n            type: (row + col) % 2 === 0 ? 1 : 0,\n          }),\n        );\n      }\n    }\n    return cells;\n  };\n\n  return (\n    <div className=\"Board\">\n      {cells()}\n      {black_pieces()}\n      {white_pieces()}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}